input {
  {{repl if ConfigOptionEquals "logstash_input_collectd_enabled" "1" }}
  collectd {
    typesdb => ["/opt/collectd-types.db"]
    port => {{repl ConfigOption "logstash_input_collectd_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_file_enabled" "1" }}
  file {
    path => ["{{repl ConfigOption "logstash_input_file_path" }}"]
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_ganglia_enabled" "1" }}
  ganglia {
    port => {{repl ConfigOption "logstash_input_ganglia_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_generator_enabled" "1" }}
  generator {
    count => {{repl ConfigOption "logstash_input_generator_count" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_log4j_enabled" "1" }}
  log4j {
    port => {{repl ConfigOption "logstash_input_log4j_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_lumberjack_enabled" "1" }}
  lumberjack {
    port => {{repl ConfigOption "logstash_input_lumberjack_port" }}
    ssl_certificate => "/opt/certs/logstash-forwarder.crt"
    ssl_key => "/opt/certs/logstash-forwarder.key"
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_rabbitmq_enabled" "1" }}
  rabbitmq {
    host => "{{repl ConfigOption "logstash_input_rabbitmq_host" }}"
    port => {{repl ConfigOption "logstash_input_rabbitmq_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_snmp_enabled" "1" }}
  snmptrap {
    port => {{repl ConfigOption "logstash_input_snmp_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_sqs_enabled" "1" }}
  sqs {
    queue => "{{repl ConfigOption "logstash_input_sqs_queue" }}"
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_syslog_enabled" "1" }}
  syslog {
    port => {{repl ConfigOption "logstash_input_syslog_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_tcp_enabled" "1" }}
  tcp {
    port => {{repl ConfigOption "logstash_input_tcp_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_udp_enabled" "1" }}
  udp {
    port => {{repl ConfigOption "logstash_input_udp_port" }}
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_unix_enabled" "1" }}
  unix {
    path => "{{repl ConfigOption "logstash_input_unix_path" }}"
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_websocket_enabled" "1" }}
  websocket {
    url => "{{repl ConfigOption "logstash_input_websocket_url" }}"
  }
  {{repl end }}
  {{repl if ConfigOptionEquals "logstash_input_zeromq_enabled" "1" }}
  zeromq {
    address => "{{repl ConfigOption "logstash_input_zeromq_address" }}"
    topology => "{{repl ConfigOption "logstash_input_zeromq_topology" }}"
  }
  {{repl end }}
}

filter {
}

output {
  elasticsearch {
    host => "{{repl HostPrivateIpAddress "Elasticsearch" "getelk/elasticsearch" }}"
    port => "{{repl ContainerExposedPort "Elasticsearch" "getelk/elasticsearch" "9300" }}"
  }

  {{repl if ConfigOptionEquals "logstash_output_rollbar_enabled" "1" }}
  rollbar {
    access_token => "{{repl ConfigOption "logstash_output_rollbar_access_token" }}"
    environment => "{{repl ConfigOption "logstash_output_rollbar_environment" }}"
    level => "{{repl ConfigOption "logstash_output_rollbar_level" }}"
    format => "{{repl ConfigOption "logstash_output_rollbar_format" }}"
  }
  {{repl end }}
}